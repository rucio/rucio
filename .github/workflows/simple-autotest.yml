name: Simple Autotest

on:
  pull_request:
  push:
  schedule:
    - cron: '0 3 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          python-version: "3.11"
      - name: Install lint dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Check headers
        run: python3 tools/add_header --dry-run --disable-progress-bar
      - name: Run Ruff
        run: ruff check --output-format=github .

  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-tag.outputs.tag }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
          
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: etc/docker/test/alma9.Dockerfile
          build-args: |
            PYTHON=3.9
          load: true
          tags: rucio-test:latest
          
      - name: Set image tag output
        id: set-tag
        run: |
          echo "tag=rucio-test:latest" >> $GITHUB_OUTPUT

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
        test-suite: 
          - name: "client"
            env:
              RDBMS: "postgres14"
            services: ["postgres"]
          - name: "multi_vo"
            env:
              RDBMS: "postgres14"
              RUCIO_HOME: "/opt/rucio/etc/multi_vo/tst"
            services: ["postgres"]
        exclude:
          # Limit some test suites to specific Python versions to reduce matrix size
          - python-version: "3.9"
            test-suite:
              name: "client_syntax"
          - python-version: "3.10"
            test-suite:
              name: "syntax"

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: rucio
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
          
      - name: Set test environment variables
        run: |
          echo "RUCIO_HOME=${{ matrix.test-suite.env.RUCIO_HOME || '/opt/rucio' }}" >> $GITHUB_ENV
          echo "RDBMS=${{ matrix.test-suite.env.RDBMS || 'sqlite' }}" >> $GITHUB_ENV
          echo "SYNTAX_REPORT=${{ matrix.test-suite.env.SYNTAX_REPORT || '0' }}" >> $GITHUB_ENV
          echo "RUN_HTTPD=${{ matrix.test-suite.env.RUN_HTTPD || 'true' }}" >> $GITHUB_ENV
          
      - name: Configure database connection for container
        if: contains(matrix.test-suite.services, 'postgres')
        run: |
          echo "DATABASE_URL=postgresql://postgres:secret@host.docker.internal:5432/rucio" >> $GITHUB_ENV
          
      - name: Run tests for ${{ matrix.test-suite.name }} in container
        run: |
          docker run --rm \
            --network host \
            -e RUCIO_HOME="${RUCIO_HOME}" \
            -e RDBMS="${RDBMS}" \
            -e SYNTAX_REPORT="${SYNTAX_REPORT}" \
            -e RUN_HTTPD="${RUN_HTTPD}" \
            -e DATABASE_URL="${DATABASE_URL:-}" \
            -v "${{ github.workspace }}/tools":/opt/rucio/tools \
            -v "${{ github.workspace }}/bin":/opt/rucio/bin \
            -v "${{ github.workspace }}/lib":/opt/rucio/lib \
            -v "${{ github.workspace }}/etc":/opt/rucio/etc \
            -v "${{ github.workspace }}/tests":/opt/rucio/tests \
            -v "${{ github.workspace }}/requirements":/opt/rucio/requirements \
            -v "${{ github.workspace }}/.pep8":/opt/rucio/.pep8 \
            -v "${{ github.workspace }}/.pycodestyle":/opt/rucio/.pycodestyle \
            -v "${{ github.workspace }}/pyproject.toml":/opt/rucio/pyproject.toml \
            -v "${{ github.workspace }}/setup.py":/opt/rucio/setup.py \
            -v "${{ github.workspace }}/setup_rucio.py":/opt/rucio/setup_rucio.py \
            -v "${{ github.workspace }}/setup_rucio_client.py":/opt/rucio/setup_rucio_client.py \
            -v "${{ github.workspace }}/setup_webui.py":/opt/rucio/setup_webui.py \
            -v "${{ github.workspace }}/setuputil.py":/opt/rucio/setuputil.py \
            -w /opt/rucio \
            ${{ needs.build.outputs.image-tag }} \
            bash -c "
              case '${{ matrix.test-suite.name }}' in
                'client')
                  python -m pytest -v tests/test_client*.py --tb=short
                  ;;
                'multi_vo')
                  python -m pytest -v tests/test_multi_vo*.py --tb=short
                  ;;
                *)
                  python -m pytest -v tests/ --tb=short
                  ;;
              esac
            "