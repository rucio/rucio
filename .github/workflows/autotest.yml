name: Run all the autotests

on:
  - pull_request
  - push

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install pip requirements
        run: |
          pip3 install -U pip setuptools
          pip3 install -U PyYAML # needed by matrix_parser.py
      - name: Identify Matrix
        id: matrix
        run: echo "::set-output name=matrix::$(./tools/test/matrix_parser.py < ./etc/docker/test/matrix.yml)"
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cfg: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - name: Create changed_files.txt
        run: |
          BASE_BRANCH=`if [[ -z "$GITHUB_BASE_REF" ]]; then echo "${{ github.event.repository.default_branch }}"; else echo "$GITHUB_BASE_REF"; fi` \
            ./tools/test/create_changelist.sh
      - name: Build images
        id: images
        run: |
          docker login https://docker.pkg.github.com -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          echo "::set-output name=images::$(echo '${{ toJson(matrix.cfg) }}' | ./tools/test/build_images.py \
          --cache-repo docker.pkg.github.com/${{ github.repository }} ./etc/docker/test)"
          docker logout https://docker.pkg.github.com
      - name: Run test with cfg
        run: 'echo ''{"matrix": ${{ toJson(matrix.cfg) }}, "images": ${{ steps.images.outputs.images }} }'' | ./tools/test/run_tests.py'
