services:
  rucio:
    image: docker.io/rucio/rucio-dev:py3
    extra_hosts:
      - "ruciodb:127.0.0.1"
      - "graphite:127.0.0.1"
      - "fts:127.0.0.1"
      - "ftsdb:127.0.0.1"
      - "xrd1:127.0.0.1"
      - "xrd2:127.0.0.1"
      - "xrd3:127.0.0.1"
      - "xrd4:127.0.0.1"
      - "minio:127.0.0.1"
      - "activemq:127.0.0.1"
      - "elasticsearch:127.0.0.1"
      - "logstash:127.0.0.1"
      - "kibana:127.0.0.1"
      - "grafana:127.0.0.1"
    ports:
      - "8443:443"
      - "5432:5432"
      - "8080:80"
      - "8446:8446"
      - "8449:8449"
      - "3306:3306"
      - "1094:1094"
      - "1095:1095"
      - "1096:1096"
      - "1097:1097"
      - "9000:9000"
      - "61613:61613"
      - "8161:8161"
      - "9200:9200"
      - "9300:9300"
      - "5044:5044"
      - "5601:5601"
      - "3000:3000"
    volumes:
      - ../../../tools:/opt/rucio/tools:Z
      - ../../../bin:/opt/rucio/bin:Z
      - ../../../lib:/opt/rucio/lib:Z
    environment:
      - X509_USER_CERT=/opt/rucio/etc/usercert.pem
      - X509_USER_KEY=/opt/rucio/etc/userkey.pem
      - RDBMS=postgres11
    command: ["/monit-entrypoint.sh"]
  ruciodb:
    image: docker.io/postgres:11
    network_mode: "service:rucio"
    environment:
      - POSTGRES_USER=rucio
      - POSTGRES_DB=rucio
      - POSTGRES_PASSWORD=secret
    command: ["-c", "fsync=off","-c", "synchronous_commit=off","-c", "full_page_writes=off"]
  graphite:
    image: docker.io/graphiteapp/graphite-statsd
    network_mode: "service:rucio"
  fts:
    image: docker.io/rucio/fts
    network_mode: "service:rucio"
  ftsdb:
    image: docker.io/mysql:5
    network_mode: "service:rucio"
    environment:
      - MYSQL_USER=fts
      - MYSQL_PASSWORD=fts
      - MYSQL_ROOT_PASSWORD=fts
      - MYSQL_DATABASE=fts
  xrd1:
    image: docker.io/rucio/xrootd
    network_mode: "service:rucio"
    environment:
      - XRDPORT=1094
    volumes:
      - ../../certs/hostcert_xrd1.pem:/tmp/xrdcert.pem:Z
      - ../../certs/hostcert_xrd1.key.pem:/tmp/xrdkey.pem:Z
  xrd2:
    image: docker.io/rucio/xrootd
    network_mode: "service:rucio"
    environment:
      - XRDPORT=1095
    volumes:
      - ../../certs/hostcert_xrd2.pem:/tmp/xrdcert.pem:Z
      - ../../certs/hostcert_xrd2.key.pem:/tmp/xrdkey.pem:Z
  xrd3:
    image: docker.io/rucio/xrootd
    network_mode: "service:rucio"
    environment:
      - XRDPORT=1096
    volumes:
      - ../../certs/hostcert_xrd3.pem:/tmp/xrdcert.pem:Z
      - ../../certs/hostcert_xrd3.key.pem:/tmp/xrdkey.pem:Z
  xrd4:
    image: docker.io/rucio/xrootd
    network_mode: "service:rucio"
    environment:
      - XRDPORT=1097
    volumes:
      - ../../certs/hostcert_xrd4.pem:/tmp/xrdcert.pem:Z
      - ../../certs/hostcert_xrd4.key.pem:/tmp/xrdkey.pem:Z
  minio:
    image: docker.io/minio/minio
    network_mode: "service:rucio"
    environment:
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password
    volumes:
      - ../../certs/hostcert_minio.pem:/root/.minio/certs/public.crt:Z
      - ../../certs/hostcert_minio.key.pem:/root/.minio/certs/private.key:Z
    command: ["server", "/data"]
  activemq:
    image: docker.io/webcenter/activemq:latest
    network_mode: "service:rucio"
    environment:
       - ACTIVEMQ_CONFIG_NAME=activemq
       - ACTIVEMQ_CONFIG_DEFAULTACCOUNT=false
       - ACTIVEMQ_USERS_fts=supersecret
       - ACTIVEMQ_USERS_hermes=supersecret
       - ACTIVEMQ_USERS_logstash=supersecret
       - ACTIVEMQ_USERS_receiver=supersecret
       - ACTIVEMQ_GROUPS_writes=hermes,fts
       - ACTIVEMQ_GROUPS_reads=logstash,receiver
       - ACTIVEMQ_CONFIG_SCHEDULERENABLED=true
  elasticsearch:
    image: docker.io/elasticsearch:7.4.0
    network_mode: "service:rucio"
    environment:
      - discovery.type=single-node
  logstash:
    image: docker.elastic.co/logstash/logstash-oss:7.3.2
    network_mode: "service:rucio"
    command: bash -c "logstash-plugin install logstash-input-stomp ; /usr/local/bin/docker-entrypoint"
    volumes:
      - ./pipeline.conf:/usr/share/logstash/pipeline/pipeline.conf:Z
  kibana:
    image: docker.io/kibana:7.4.0
    network_mode: "service:rucio"
  grafana:
    image: docker.io/grafana/grafana:latest
    network_mode: "service:rucio"
