version: "3"
services:
  rucioclient:
    image: docker.io/rucio/rucio-dev:latest-alma9
    entrypoint: ["/rucio_source/etc/docker/dev/rucio/entrypoint.sh"]
    command: ["sleep", "infinity"]
    profiles:
      - client
    volumes:
      - ../../certs/rucio_ca.pem:/etc/grid-security/certificates/5fca1cb1.0:ro
      - ../../certs/rucio_ca.pem:/opt/rucio/etc/rucio_ca.pem:ro
      - ../../certs/rucio_ca.pem:/etc/pki/ca-trust/source/anchors/rucio_ca.pem:ro
      - ../../certs/hostcert_rucio.pem:/etc/grid-security/hostcert.pem:z
      - ../../certs/hostcert_rucio.key.pem:/etc/grid-security/hostkey.pem:z
      - ../../certs/ruciouser.pem:/tmp/usercert.pem:z
      - ../../certs/ruciouser.key.pem:/tmp/userkey.pem:z
      - ../../certs/ruciouser.certkey.pem:/opt/rucio/etc/usercertkey.pem:z
      - ../../certs/ssh/ruciouser_sshkey.pub:/root/.ssh/ruciouser_sshkey.pub:z
      - ../../certs/ssh/ruciouser_sshkey:/root/.ssh/ruciouser_sshkey:z
      - ./rucio/idpsecrets.json:/opt/rucio/etc/idpsecrets.json:ro
      - ../../../tools:/opt/rucio/tools:Z
      - ../../../bin:/opt/rucio/bin:Z
      - ../../../lib:/opt/rucio/lib:Z
      - ../../../tests:/opt/rucio/tests:Z
      - ../../../:/rucio_source:ro
    environment:
      - REQUESTS_CA_BUNDLE=/etc/pki/tls/certs/ca-bundle.crt
      - RUCIO_SOURCE_DIR=/rucio_source
      - RDBMS
  rucio:
    image: docker.io/rucio/rucio-dev:latest-alma9
    entrypoint: ["/rucio_source/etc/docker/dev/rucio/entrypoint.sh"]
    command: ["httpd","-D","FOREGROUND"]
    volumes:
      - ../../certs/rucio_ca.pem:/etc/grid-security/certificates/5fca1cb1.0:ro
      - ../../certs/rucio_ca.pem:/opt/rucio/etc/rucio_ca.pem:ro
      - ../../certs/rucio_ca.pem:/etc/pki/ca-trust/source/anchors/rucio_ca.pem:ro
      - ../../certs/hostcert_rucio.pem:/etc/grid-security/hostcert.pem:z
      - ../../certs/hostcert_rucio.key.pem:/etc/grid-security/hostkey.pem:z
      - ../../certs/ruciouser.pem:/tmp/usercert.pem:z
      - ../../certs/ruciouser.key.pem:/tmp/userkey.pem:z
      - ../../certs/ruciouser.certkey.pem:/opt/rucio/etc/usercertkey.pem:z
      - ../../certs/ssh/ruciouser_sshkey.pub:/root/.ssh/ruciouser_sshkey.pub:z
      - ../../certs/ssh/ruciouser_sshkey:/root/.ssh/ruciouser_sshkey:z
      - ./rucio/idpsecrets.json:/opt/rucio/etc/idpsecrets.json:ro
      - ../../../tools:/opt/rucio/tools:Z
      - ../../../bin:/opt/rucio/bin:Z
      - ../../../lib:/opt/rucio/lib:Z
      - ../../../tests:/opt/rucio/tests:Z
      - ../../../:/rucio_source:ro
    environment:
      - REQUESTS_CA_BUNDLE=/etc/pki/tls/certs/ca-bundle.crt
      - RUCIO_SOURCE_DIR=/rucio_source
      - RDBMS
  ruciodb:
    image: docker.io/postgres:14
    environment:
      - POSTGRES_USER=rucio
      - POSTGRES_DB=rucio
      - POSTGRES_PASSWORD=secret
    command: ["-c", "fsync=off","-c", "synchronous_commit=off","-c", "full_page_writes=off"]
  graphite:
    image: docker.io/graphiteapp/graphite-statsd
  influxdb:
    image: docker.io/influxdb:latest
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=myusername
      - DOCKER_INFLUXDB_INIT_PASSWORD=passwordpasswordpassword
      - DOCKER_INFLUXDB_INIT_ORG=rucio
      - DOCKER_INFLUXDB_INIT_BUCKET=rucio
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=mytoken
  elasticsearch:
    image: docker.io/elasticsearch:7.4.0
    environment:
      - discovery.type=single-node
  activemq:
    image: docker.io/webcenter/activemq:latest
    environment:
      - ACTIVEMQ_CONFIG_NAME=activemq
      - ACTIVEMQ_CONFIG_DEFAULTACCOUNT=false
      - ACTIVEMQ_USERS_fts=supersecret
      - ACTIVEMQ_GROUPS_writes=fts
      - ACTIVEMQ_USERS_receiver=supersecret
      - ACTIVEMQ_GROUPS_reads=receiver
      - ACTIVEMQ_CONFIG_SCHEDULERENABLED=true
      - ACTIVEMQ_USERS_hermes=supersecret
      - ACTIVEMQ_CONFIG_QUEUES_events=/queue/events'
  postgres14:
    image: docker.io/postgres:14
    profiles:
      - postgres14
    environment:
      - POSTGRES_USER=rucio
      - POSTGRES_DB=rucio
      - POSTGRES_PASSWORD=rucio
    command: ["-c", "fsync=off","-c", "synchronous_commit=off","-c", "full_page_writes=off"]
  mysql8:
    image: docker.io/mysql:8
    profiles:
      - mysql8
    environment:
      - MYSQL_USER=rucio
      - MYSQL_PASSWORD=rucio
      - MYSQL_ROOT_PASSWORD=rucio
      - MYSQL_DATABASE=rucio
      - MYSQL_TCP_PORT=3308
    command:
      - "--default-authentication-plugin=mysql_native_password"
      - "--character-set-server=latin1"
  oracle:
    image: docker.io/gvenzl/oracle-xe:18.4.0
    profiles:
      - oracle
    environment:
      - ORACLE_PASSWORD=rucio
      - ORACLE_ALLOW_REMOTE=true
      - ORACLE_DISABLE_ASYNCH_IO=true
      - processes=1000
      - sessions=1105
      - transactions=1215
    volumes:
      - ./oracle_setup.sh:/container-entrypoint-initdb.d/oracle_setup.sh:Z
  fts:
    image: docker.io/rucio/fts
    profiles:
      - storage
    volumes:
      - ./fts/entrypoint.sh:/docker-entrypoint.sh:ro
      - ../../certs/rucio_ca.pem:/etc/pki/ca-trust/source/anchors/rucio_ca.pem:ro
      - ../../certs/rucio_ca.pem:/etc/grid-security/certificates/5fca1cb1.0:z
      - ../../certs/hostcert_fts.pem:/etc/grid-security/hostcert.pem:Z
      - ../../certs/hostcert_fts.key.pem:/etc/grid-security/hostkey.pem:Z
      - ./fts/fts3restconfig:/etc/fts3/fts3restconfig:ro
    environment:
      - REQUESTS_CA_BUNDLE=/etc/pki/tls/certs/ca-bundle.crt
    ulimits:
      nofile:
        soft: 10240
        hard: 10240
  ftsdb:
    image: docker.io/mysql:8
    profiles:
      - storage
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_USER=fts
      - MYSQL_PASSWORD=fts
      - MYSQL_ROOT_PASSWORD=fts
      - MYSQL_DATABASE=fts
  xrd1:
    image: docker.io/rucio/xrootd
    profiles:
      - storage
    environment:
      - XRDHOST=xrd1
      - XRDPORT=1094
    volumes:
      - ../../certs/rucio_ca.pem:/etc/grid-security/certificates/5fca1cb1.0:z
      - ../../certs/hostcert_xrd1.pem:/tmp/xrdcert.pem:Z
      - ../../certs/hostcert_xrd1.key.pem:/tmp/xrdkey.pem:Z
    ulimits:
      nofile:
        soft: 10240
        hard: 10240
  xrd2:
    image: docker.io/rucio/xrootd
    profiles:
      - storage
    environment:
      - XRDHOST=xrd2
      - XRDPORT=1095
    volumes:
      - ../../certs/rucio_ca.pem:/etc/grid-security/certificates/5fca1cb1.0:z
      - ../../certs/hostcert_xrd2.pem:/tmp/xrdcert.pem:Z
      - ../../certs/hostcert_xrd2.key.pem:/tmp/xrdkey.pem:Z
    ulimits:
      nofile:
        soft: 10240
        hard: 10240
  xrd3:
    image: docker.io/rucio/xrootd
    profiles:
      - storage
    environment:
      - XRDHOST=xrd3
      - XRDPORT=1096
    volumes:
      - ../../certs/rucio_ca.pem:/etc/grid-security/certificates/5fca1cb1.0:z
      - ../../certs/hostcert_xrd3.pem:/tmp/xrdcert.pem:Z
      - ../../certs/hostcert_xrd3.key.pem:/tmp/xrdkey.pem:Z
    ulimits:
      nofile:
        soft: 10240
        hard: 10240
  xrd4:
    image: docker.io/rucio/xrootd
    profiles:
      - storage
    environment:
      - XRDHOST=xrd4
      - XRDPORT=1097
    volumes:
      - ../../certs/rucio_ca.pem:/etc/grid-security/certificates/5fca1cb1.0:z
      - ../../certs/hostcert_xrd4.pem:/tmp/xrdcert.pem:Z
      - ../../certs/hostcert_xrd4.key.pem:/tmp/xrdkey.pem:Z
    ulimits:
      nofile:
        soft: 10240
        hard: 10240
  xrd5:
    image: docker.io/rucio/xrootd
    profiles:
      - storage
    environment:
      - XRDHOST=xrd5
      - XRDPORT=1098
    volumes:
      - ./xrd/entrypoint.sh:/docker-entrypoint.sh:ro
      - ./xrd:/configs:ro
      - ../../certs/rucio_ca.pem:/etc/grid-security/certificates/5fca1cb1.0:z
      - ../../certs/hostcert_xrd5.pem:/tmp/xrdcert.pem:Z
      - ../../certs/hostcert_xrd5.key.pem:/tmp/xrdkey.pem:Z
    ulimits:
      nofile:
        soft: 10240
        hard: 10240
  web1:
    image: rucio/webdav
    command: bash -c "a2dismod want_digest; apache2 -D FOREGROUND"
    volumes:
      - ../../certs/rucio_ca.pem:/etc/grid-security/certificates/5fca1cb1.0:ro
      - ../../certs/hostcert_web1.key.pem:/etc/grid-security/hostkey.pem:ro
      - ../../certs/hostcert_web1.pem:/etc/grid-security/hostcert.pem:Z
      - ./web1/default-ssl.conf:/etc/apache2/sites-available/default-ssl.conf
  minio:
    image: docker.io/minio/minio
    profiles:
      - storage
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    volumes:
      - ../../certs/hostcert_minio.pem:/root/.minio/certs/public.crt:Z
      - ../../certs/hostcert_minio.key.pem:/root/.minio/certs/private.key:Z
    command: ["server", "/data"]
  ssh1:
    image: docker.io/rucio/ssh
    profiles:
      - storage
    volumes:
      - ../../certs/ssh/ruciouser_sshkey.pub:/tmp/sshkey.pub:Z
  mongo:
    image: docker.io/mongo:5.0
    profiles:
      - externalmetadata
  postgres:
    image: docker.io/postgres:14
    profiles:
      - externalmetadata
    environment:
      - POSTGRES_USER=rucio
      - POSTGRES_DB=metadata
      - POSTGRES_PASSWORD=secret
    command: ["-p", "5433"]
  logstash:
    image: docker.elastic.co/logstash/logstash-oss:7.3.2
    profiles:
      - monitoring
    command: bash -c "logstash-plugin install logstash-input-stomp ; /usr/local/bin/docker-entrypoint"
    volumes:
      - ./pipeline.conf:/usr/share/logstash/pipeline/pipeline.conf:Z
  kibana:
    image: docker.io/kibana:7.4.0
    profiles:
      - monitoring
  grafana:
    image: docker.io/grafana/grafana:latest
    profiles:
      - monitoring
  iam-db:
    image: mariadb:10.11
    profiles:
      - iam
    healthcheck:
      test: mysql -u indigoiam -psecret indigoiam -e "select * from client_details where client_name='rucio'" | grep 'rucio' > /dev/null
      interval: 5s
      retries: 10
    environment:
      - TZ=Europe/Paris
      - MARIADB_ROOT_PASSWORD=supersecret
    volumes:
      - ./iam/dbs_and_users.sql:/docker-entrypoint-initdb.d/01_dbs_and_users.sql:ro
      - ./iam/keycloak_db.sql:/docker-entrypoint-initdb.d/02_keycloak.sql:ro
      - ./iam/indigoiam_db.sql:/docker-entrypoint-initdb.d/03_indigoiam.sql:ro
  indigoiam:
    image: nginx
    profiles:
      - iam
    dns_search: cern.ch
    environment:
      TZ: Europe/Paris
      NGINX_HOST: indigoiam
      NGINX_PORT: 443
    volumes:
      - ../../certs/rucio_ca.pem:/etc/grid-security/certificates/5fca1cb1.0:z
      - ../../certs/hostcert_indigoiam.pem:/etc/grid-security/hostcert.pem:z
      - ../../certs/hostcert_indigoiam.key.pem:/etc/grid-security/hostkey.pem:z
      - /dev/urandom:/dev/random
      - ./iam/indigoiam_nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - indigoiam-login-service
  indigoiam-login-service:
    image: indigoiam/iam-login-service:v1.8.2p2
    profiles:
      - iam
    environment:
      - IAM_JAVA_OPTS=-Djava.security.egd=file:/dev/urandom -Dspring.profiles.active=prod,oidc,cern,registration,wlcg-scopes -agentlib:jdwp=transport=dt_socket,server=y,address=1044,suspend=n -Dlogging.file.name=/var/log/iam/iam.log
      - IAM_JWT_DEFAULT_PROFILE=wlcg
      - IAM_HOST=indigoiam
      - IAM_PORT=8090
      - IAM_BASE_URL=https://indigoiam/
      - IAM_ISSUER=https://indigoiam/
      - IAM_FORWARD_HEADERS_STRATEGY=native
      - IAM_KEY_STORE_LOCATION=file:/keystore.jwks
      - IAM_JWK_CACHE_LIFETIME=21600
      # - IAM_X509_TRUST_ANCHORS_DIR=/etc/grid-security/certificates
      # - IAM_X509_TRUST_ANCHORS_REFRESH=14400
      - IAM_TOMCAT_ACCESS_LOG_ENABLED=false
      - IAM_TOMCAT_ACCESS_LOG_DIRECTORY=/tmp
      - IAM_ACTUATOR_USER_USERNAME=user
      - IAM_ACTUATOR_USER_PASSWORD=secret
      - IAM_LOCAL_RESOURCES_ENABLE=true
      - IAM_LOCAL_RESOURCES_LOCATION=file:/indigo-iam/local-resources
      - IAM_ORGANISATION_NAME=rucio-dc
      - IAM_TOPBAR_TITLE="INDIGO IAM for rucio-dc"
      - IAM_DB_HOST=iam-db
      - IAM_DB_PORT=3306
      - IAM_DB_NAME=indigoiam
      - IAM_DB_USERNAME=indigoiam
      - IAM_DB_PASSWORD=secret
    volumes:
      - ./iam/indigoiam_keystore.jwks:/keystore.jwks:ro
    depends_on:
      iam-db:
        condition: service_healthy
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.1
    command: start-dev --features=token-exchange,admin-fine-grained-authz,dynamic-scopes --db mariadb --db-url-host iam-db --db-username keycloak --db-password secret --https-certificate-file=/cert.pem --https-certificate-key-file=/key.pem
    profiles:
      - iam
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
    volumes:
      - ../../certs/rucio_ca.pem:/etc/grid-security/certificates/5fca1cb1.0:z
      - ../../certs/hostcert_keycloak.pem:/cert.pem:z
      - ../../certs/hostcert_keycloak.key.pem:/key.pem:z
    depends_on:
      iam-db:
        condition: service_healthy
