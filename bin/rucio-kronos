#!/usr/bin/env python3
# Copyright 2018-2021 CERN
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Authors:
# - Thomas Beermann, <thomas.beermann@cern.ch>, 2014
# - Mario Lassnig, <mario.lassnig@cern.ch>, 2015-2021
# - Vincent Garonne, <vgaronne@gmail.com>, 2018
# - Cedric Serfon <cedric.serfon@cern,ch>, 2018

"""
Kronos is a daemon the consumer tracer messages and update the replica atime accordingly.
"""

import argparse
import signal

from rucio.daemons.tracer.kronos import run, stop


def get_parser():
    """
    Returns the argparse parser.
    """
    parser = argparse.ArgumentParser(description="Kronos is a daemon that consume tracer massages and update the replica accessed time accordingly.")
    parser.add_argument("--threads", action="store", default=1, type=int, help='Concurrency control: number of threads')
    parser.add_argument('--sleep-time-files', action="store", default=60, type=int, help='Seconds to sleep between two cycles for the file thread')
    parser.add_argument('--sleep-time-datasets', action="store", default=60, type=int, help='Seconds to sleep between two cycles for the dataset thread')
    return parser


if __name__ == "__main__":
    signal.signal(signal.SIGTERM, stop)
    parser = get_parser()
    args = parser.parse_args()
    try:
        run(threads=args.threads, sleep_time_files=args.sleep_time_files, sleep_time_datasets=args.sleep_time_datasets)
    except KeyboardInterrupt:
        stop()
