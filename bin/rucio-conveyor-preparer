#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright CERN since 2012
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
import signal

from rucio.daemons.conveyor.preparer import run, stop


def main(args):
    signal.signal(signal.SIGTERM, stop)
    try:
        run(once=args.run_once, threads=args.threads, sleep_time=args.sleep_time, bulk=args.bulk)
    except KeyboardInterrupt:
        stop()


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--run-once", action="store_true", default=False, help='One iteration only')
    parser.add_argument("--threads", action="store", default=1, type=int, help='Concurrency control: total number of threads on this process')
    parser.add_argument("--sleep-time", action="store", default=60, type=int, help='Concurrency control: thread sleep time after each chunk of work')
    parser.add_argument("--bulk", action="store", default=100, type=int, help='Limit of requests per chunk')
    main(args=parser.parse_args())
