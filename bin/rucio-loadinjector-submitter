#!/usr/bin/env python3
# Copyright European Organization for Nuclear Research (CERN) since 2012
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
loadinjector submitter is a daemon that periodically executes load injection tasks.
"""

import argparse
import signal

from rucio.daemons.loadinjector.submitter import run, stop


def get_parser():
    """
    Returns the argparse parser
    """
    parser = argparse.ArgumentParser(
        description="The Loadinjector-Submitter is responsible for injecting loads among given RSEs",
        epilog="""
Run the daemon::
    $ rucio-loadinjector-submitter --run-once

    """,
        formatter_class=argparse.RawDescriptionHelpFormatter,
    )
    parser.add_argument(
        "--run-once",
        action="store_true",
        default=False,
        help="Run the daemon only once",
    )
    parser.add_argument(
        "--sleep-time",
        action="store",
        default=5,
        type=int,
        help="Time to sleep between each run in seconds (default: 60)",
    )

    return parser


if __name__ == "__main__":

    signal.signal(signal.SIGTERM, stop)

    parser = get_parser()
    args = parser.parse_args()
    try:
        run(once=args.run_once, sleep_time=args.sleep_time)
    except KeyboardInterrupt:
        stop()
