#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright European Organization for Nuclear Research (CERN) since 2012
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Rucio Cache Consumer is a daemon to add/delete cache replicas to Rucio catalog.
"""

import argparse
import signal

from rucio.daemons.cache.consumer import run, stop


def get_parser():
    """
    Returns the argparse parser.
    """
    parser = argparse.ArgumentParser(description="Rucio Cache Consumer is a daemon to add/delete cache replicas to Rucio catalog.")
    parser.add_argument("--num-thread", action="store", default=1, type=int, help='Concurrency control: threads number')
    return parser


if __name__ == "__main__":
    signal.signal(signal.SIGTERM, stop)
    parser = get_parser()
    args = parser.parse_args()
    try:
        run(args.num_thread)
    except KeyboardInterrupt:
        stop()
