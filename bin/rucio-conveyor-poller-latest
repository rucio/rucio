#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright 2015-2021 CERN
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Authors:
# - Wen Guan <wen.guan@cern.ch>, 2015
# - Martin Barisits <martin.barisits@cern.ch>, 2016
# - Vincent Garonne <vincent.garonne@cern.ch>, 2018
# - Hannes Hansen <hannes.jakob.hansen@cern.ch>, 2018
# - Mario Lassnig <mario.lassnig@cern.ch>, 2018
# - Benedikt Ziemons <benedikt.ziemons@cern.ch>, 2020
# - David Poblaci√≥n Criado <david.poblacion.criado@cern.ch>, 2021

"""
Conveyor is a daemon to manage file transfers.
"""

import argparse
import signal
import sys

from rucio.daemons.conveyor.poller_latest import run, stop


def get_parser():
    """
    Returns the argparse parser.
    """
    parser = argparse.ArgumentParser()
    parser.add_argument("--run-once", action="store_true", default=False,
                        help='One iteration only')
    parser.add_argument("--total-threads", action="store", default=1, type=int,
                        help='Concurrency control: total number of threads per process')
    parser.add_argument("--last-nhours", action="store", default=1, type=int,
                        help='Poll control: poll FTS jobs in last n hours with given state in "latest" mode')
    parser.add_argument("--fts-wait", action="store", default=1800, type=int,
                        help='OBSOLETE, PLEASE USE --sleep-time INSTEAD. Poll control: wait seconds to poll FTS server in "latest" mode')
    parser.add_argument("--sleep-time", action="store", default=1800, type=int,
                        help='Poll control: wait seconds to poll FTS server in "latest" mode')
    parser.add_argument("--external-hosts", nargs='+', type=str,
                        help='Poll control: List of FTS hosts')
    parser.add_argument("--allow", action="store_true", default=False,
                        help='This daemon is deprecated and will be removed. Explicitly turn it on.')
    return parser


if __name__ == "__main__":

    signal.signal(signal.SIGTERM, stop)
    parser = get_parser()
    args = parser.parse_args()

    if args.allow:

        try:
            run(once=args.run_once,
                last_nhours=args.last_nhours,
                fts_wait=args.fts_wait,
                total_threads=args.total_threads,
                external_hosts=args.external_hosts,
                sleep_time=args.sleep_time)
        except KeyboardInterrupt:
            stop()

    else:

        print('This daemon is deprecated and will be removed. Explicitly turn it on with --allow.')
        sys.exit(1)
