#!/usr/bin/env python3

# Copyright European Organization for Nuclear Research (CERN)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Authors:
# - Vincent Garonne, <vincent.garonne@cern.ch>, 2012
# - Martin Barisits, <martin.barisits@cern.ch>, 2015-2018
# - Benedikt Ziemons <benedikt.ziemons@cern.ch, 2020
# - Cedric Serfon <cedric.serfon@cern.ch, 2020

import os
import re
import shutil
import subprocess
import sys
import tempfile


def main():
    currentbranch = subprocess.check_output(('git', 'rev-parse', '--abbrev-ref=strict', 'HEAD'))
    currentbranch = currentbranch.decode(encoding='UTF-8').rstrip('\n')
    if currentbranch == 'master' or currentbranch == 'next' or currentbranch == 'hotfix':
        print("You are trying to commit on your master/next/hotfix, that's probably a mistake. Exiting...")
        sys.exit(1)
    modified = re.compile(r'^[AM]+\s+(?P<name>(.*\.py)|(bin/.*))', re.MULTILINE)
    files = subprocess.check_output(('git', 'status', '--porcelain')).decode(encoding='UTF-8')
    files = list(map(lambda groups: groups[0], modified.findall(files)))
    os.environ['PYTHONPATH'] = os.path.join(os.environ['PWD'], 'lib')
    tempdir = tempfile.mkdtemp()
    for name in files:
        # Symlinks not properly handled, skipped
        if os.path.islink(name):
            continue
        filename = os.path.join(tempdir, name)
        filepath = os.path.dirname(filename)
        if not os.path.exists(filepath):
            os.makedirs(filepath)
        with open(filename, 'w') as f:
            subprocess.check_call(('git', 'show', ':' + name), stdout=f)

    for name in ('.flake8', '.pep8', '.pycodestyle', 'pylintrc'):
        shutil.copy(name, os.path.join(tempdir, name))

    proc = subprocess.run(('flake8', '.'), cwd=tempdir, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    if proc.stdout:
        print(proc.stdout.decode(encoding='UTF-8'))
    if proc.returncode != 0:
        sys.exit(1)

    for filename in files:
        # Symlinks not properly handled, skipped
        if os.path.islink(filename):
            continue
        proc = subprocess.run(('pylint', '--rcfile=pylintrc', '-E', filename),
                              cwd=tempdir, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        if proc.stdout:
            print(proc.stdout.decode(encoding='UTF-8'))
        if proc.returncode != 0:
            sys.exit(1)


if __name__ == '__main__':
    main()
